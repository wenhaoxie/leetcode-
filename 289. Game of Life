class Solution:
    def gameOfLife(self, board):
        """
        :type board: List[List[int]]
        :rtype: void Do not return anything, modify board in-place instead.
        """
        d = [ [ 0 for y in range(len(board[0])) ] for x in range(len(board)) ]
        for i in range(len(board)):
            for j in range(len(board[0])):
                num = self.helper(board,i,j)
                if num <2:
                    d[i][j] = 0
                if num == 2:
                    d[i][j] = board[i][j]
                if num == 3:
                    d[i][j] = 1
                if num >3:
                    d[i][j] = 0
        board[:] = d
                
    def helper(self,board,i,j):
        r_begin = max(0,i-1)
        r_end = min(i+1,len(board)-1)
        c_begin = max(0,j-1)
        c_end = min(j+1,len(board[i])-1)
        return sum(sum(rows[c_begin:c_end+1]) for rows in board[r_begin:r_end+1])-board[i][j]
